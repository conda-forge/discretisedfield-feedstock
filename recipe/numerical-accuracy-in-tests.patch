--- a/discretisedfield/tests/test_field.py
+++ b/discretisedfield/tests/test_field.py
@@ -770,9 +770,9 @@ class TestField:
         f1 = df.Field(mesh, dim=1, value=1.2)
         f2 = df.Field(mesh, dim=1, value=-2)
         res = f1 * f2
-        assert res.average == -2.4
+        assert np.allclose(res.average, -2.4)
         res = f1 / f2
-        assert res.average == -0.6
+        assert np.allclose(res.average, -0.6)
         f1 *= f2
         assert f1.average == -2.4
         f1 /= f2
@@ -781,19 +781,19 @@ class TestField:
         # Scalar field with a constant
         f = df.Field(mesh, dim=1, value=5)
         res = f * 2
-        assert res.average == 10
+        assert np.allclose(res.average, 10)
         res = 3 * f
-        assert res.average == 15
+        assert np.allclose(res.average, 15)
         res = f * (1, 2, 3)
-        assert res.average == (5, 10, 15)
+        assert np.allclose(res.average, (5, 10, 15))
         res = (1, 2, 3) * f
-        assert res.average == (5, 10, 15)
+        assert np.allclose(res.average, (5, 10, 15))
         res = f / 2
-        assert res.average == 2.5
+        assert np.allclose(res.average, 2.5)
         res = 10 / f
-        assert res.average == 2
+        assert np.allclose(res.average, 2)
         res = (5, 10, 15) / f
-        assert res.average == (1, 2, 3)
+        assert np.allclose(res.average, (1, 2, 3))
         f *= 10
         assert f.average == 50
         f /= 10
@@ -803,11 +803,11 @@ class TestField:
         f1 = df.Field(mesh, dim=1, value=2)
         f2 = df.Field(mesh, dim=3, value=(-1, -3, 5))
         res = f1 * f2  # __mul__
-        assert res.average == (-2, -6, 10)
+        assert np.allclose(res.average, (-2, -6, 10))
         res = f2 * f1  # __rmul__
-        assert res.average == (-2, -6, 10)
+        assert np.allclose(res.average, (-2, -6, 10))
         res = f2 / f1  # __truediv__
-        assert res.average == (-0.5, -1.5, 2.5)
+        assert np.allclose(res.average, (-0.5, -1.5, 2.5))
         f2 *= f1  # __imul__
         assert f2.average == (-2, -6, 10)
         f2 /= f1  # __truediv__
@@ -818,11 +818,11 @@ class TestField:
         # Vector field with a scalar
         f = df.Field(mesh, dim=3, value=(1, 2, 0))
         res = f * 2
-        assert res.average == (2, 4, 0)
+        assert np.allclose(res.average, (2, 4, 0))
         res = 5 * f
-        assert res.average == (5, 10, 0)
+        assert np.allclose(res.average, (5, 10, 0))
         res = f / 2
-        assert res.average == (0.5, 1, 0)
+        assert np.allclose(res.average, (0.5, 1, 0))
         f *= 2
         assert f.average == (2, 4, 0)
         f /= 2
@@ -931,7 +931,7 @@ class TestField:
         assert (f1 @ f2)((5, 7, 1)) == 47
 
         # Check norm computed using dot product
-        assert f1.norm == (f1 @ f1) ** (0.5)
+        assert f1.norm.allclose((f1 @ f1) ** (0.5))
 
         # Exceptions
         f1 = df.Field(mesh, dim=1, value=1.2)
